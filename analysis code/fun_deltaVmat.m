function deltaV = fun_deltaVmat()
% fun_deltaVmat calculates the Q value difference between exploration and
% exploitation according to the optimal policy for r* = 1:0.1:5 and t_left
% = 1:9.
%
% USAGE: deltaV = fun_deltaVmat()
%
% OUTPUT: deltaV - a 49*9 matrix, whose rows correspond to r* and columns
%   correspond to t_left

V = nan(41,9);
deltaV = nan(41,9);

% cdf and pdf
x = 1:0.1:5;
cdfvalue = normcdf(x+0.05,3,0.6);
cdfvalue(end) = 1;
pdfvalue = cdfvalue-[0,cdfvalue(1:end-1)];

meanx = sum(pdfvalue.*x);

pmax = repmat(cdfvalue-[0,cdfvalue(1:end-1)],41,1);
for muind = 1:41
    pmax(muind,1:muind-1) = 0;
    pmax(muind,muind) = cdfvalue(muind);
end

% when n=1
V(:,1) = (ones(1,41)*meanx.*(x<meanx)+x.*(x>=meanx))';
deltaV(:,1) = (ones(1,41)*meanx-x)';

% when n>1
for n = 2:9
    for muind = 1:41
        mu = x(muind);
        Q0 = mu + V(muind,n-1);
        Q1 = meanx+pmax(muind,:)*V(:,n-1);
        deltaV(muind,n) = Q1 - Q0;
        V(muind,n) = max(Q0,Q1);
    end
end

end