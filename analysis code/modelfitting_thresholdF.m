function modelfitting_thresholdF(subnum,model)
% modelfitting_thresholdF runs the fitting of the Num and Prop models using
% fminunc.
%
% USAGE: modelfitting_thresholdF(subnum,model)

Npar = 3;

% initialize parameters
sptotalnum = 100;
sppars0 = rand(Npar,sptotalnum);
switch model
    case 2
        sppars0(1,:) = 0.2*sppars0(1,:); % k
        sppars0(2,:) = sppars0(2,:) + 2.5; % b
    case 3
        sppars0(1,:) = sppars0(1,:); % k
        sppars0(2,:) = sppars0(2,:) + 2.5; % b
end
sppars0(end,:) = sppars0(end,:) + 1; % log(beta)

pars = nan(Npar,sptotalnum); minusllh = nan(1,sptotalnum); exitflag = nan(1,sptotalnum);

numnotmature = 0;

% load data to be fit
load(['data_extracted/extracted_sub' num2str(subnum) '.mat']);

for spnum = 1:sptotalnum
    spnum
    pars0 = sppars0(:,spnum);    
        
    % options for fmincon
    options.display = 'iter';
    options.MaxFunEvals = 10000;
    options.MaxIterations = 1000;
    options.Algorithm = 'quasi-newton';
    
    fun = @(pars)optimizefun_thresholdF(model,pars,actions,muvalue,daysleft,totaldays);
    [pars(:,spnum),minusllh(spnum),exitflag(spnum)] = fminunc(fun,pars0,options);
    
    % change it back to original scale
    pars(end,spnum) = exp(pars(end,spnum));
    
    if exitflag(spnum) == 0
        numnotmature = numnotmature+1;
    end
end

[minvalue,minind] = min(minusllh);
p_min = pars(:,minind)';
minusloglik_min = minvalue;

fittingmethod = ['fminunc_logscale_spnum' num2str(sptotalnum)];
save(['fittingresult/' fun_modelnum2name(model) '_sub' num2str(subnum) '.mat'],'p_min','minusloglik_min','fittingmethod');
save(['fittingresult/' fun_modelnum2name(model) '_sub' num2str(subnum) '_all.mat'],'pars','minusllh','exitflag','numnotmature','fittingmethod');

end

function minusllh = optimizefun_thresholdF(model,pars,actions,muvalue,daysleft,totaldays)

[k,b,beta] = deal(pars(1),pars(2),exp(pars(3)));

switch model
    case 2 % threshold: linear on number of days left
        threshold = k*daysleft + b;
    case 3 % threshold: linear on proportion of days left
        threshold = k*daysleft./totaldays + b;
end
threshold(threshold>5) = 5;
threshold(threshold<1) = 1;

pexplore = 1./(1+exp(-beta*(threshold - muvalue)));
minusllh = - sum(log(pexplore.*(actions==1) + (1-pexplore).*(actions==0)));

end