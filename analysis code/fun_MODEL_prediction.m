function [Pr1,exponent,pexplore_eta_all,pmf] = fun_MODEL_prediction(modelnum,pars,mu,daysleft,totaldays)
% fun_MODEL_prediction returns the prediction (probability of exploration)
% of a certain model.

pars = pars(:);
rownum = length(mu);

if modelnum <= 3 % fixed thresholds
    
    switch modelnum
        case 1 % Opt
            deltaV = nan(length(mu),1);
            if modelnum == 1
                deltaVmat = fun_deltaVmat();
                for ind = 1:rownum
                    deltaV(ind) = deltaVmat(41*(daysleft(ind)-1)+round((mu(ind)-1)/0.1+1));
                end
            end
            exponent = [ones(rownum,1),deltaV] * pars;
        case 2 % Num
            [k,b,beta] = deal(pars(1),pars(2),pars(3));
            threshold = boundthres(k*daysleft+b);
            exponent = beta*(threshold-mu);
        case 3 % Prop
            [k,b,beta] = deal(pars(1),pars(2),pars(3));
            threshold = boundthres(k*daysleft./totaldays+b);
            exponent = beta*(threshold-mu);
    end
    Pr1 = 1./(1+exp(-exponent));
    
else % variable thresholds
    
    Ntrials = sum(daysleft == 1);
%     Pr1 = nan(Ntrials,1);
    
    [k,b,sigma,beta] = deal(pars(1),pars(2),pars(3),pars(4));
    
    deta = sigma/300;
    eta = -6*sigma:deta:6*sigma; % row vector
    pmf = normpdf(eta,0,sigma)*deta;
    
    i = 1;
    pexplore_eta_all = cell(1,Ntrials);
    for itrial = 1:Ntrials
        % pull out the data for that trial
        trial_length = totaldays(i);
        trial_rstar = [nan;mu(i:i+trial_length-2)]; % column vector
        
        switch modelnum
            case 4 % Num-V
                thresholdfix = (k*(trial_length:-1:1) + b)';
            case 5 % Prop-V
                thresholdfix = (k*(trial_length:-1:1)/trial_length + b)'; % column vector
        end
        threshold = boundthres(thresholdfix + eta);
        
        % numerically integrate over eta
        pexplore_eta = 1./(1+exp(-beta*(threshold - trial_rstar))); % this should give a trial_length*Neta matrix
        pexplore_eta(1,:) = 1; % first action is surely exploration
        pexplore_eta_all{itrial} = pexplore_eta(2:end,:);
%         pexplore = sum(pexplore_eta.*repmat(pmf,size(pexplore_eta,1),1),2);
%         Pr1(i:i+trial_length-2) = pexplore(2:end);
        
        i = i + trial_length - 1;
    end
    
    Pr1 = nan;
    exponent = nan;
    
end
end

function threshold = boundthres(threshold)
threshold(threshold>5) = 5;
threshold(threshold<1) = 1;
end
