function result = fun_deltaV(mus,ns)
% fun_deltaV calculates the Q value difference between exploration and
% exploitation according to the optimal policy for given pairs of r* and
% t_left values.
%
% USAGE: result = fun_deltaV(mus,ns)
%
% INPUTS:   mus - an array of r* values
%           ns: - an array of t_left values

V=nan(41,9);
deltaV=nan(41,9);

% cdf and pdf
x=1:0.1:5;
cdfvalue=normcdf(x+0.05,3,0.6);
cdfvalue(end)=1;
pdfvalue=cdfvalue-[0,cdfvalue(1:end-1)];
meanx=sum(pdfvalue.*x);

pmax=repmat(cdfvalue-[0,cdfvalue(1:end-1)],41,1);
for muind=1:41
    pmax(muind,1:muind-1)=0;
    pmax(muind,muind)=cdfvalue(muind);
end

% when n=1
V(:,1)=(ones(1,41)*meanx.*(x<meanx)+x.*(x>=meanx))';
deltaV(:,1)=(ones(1,41)*meanx-x)';

% when n>1
for n=2:9
    for muind=1:41
        mu=x(muind);
        Q0=mu+V(muind,n-1);
        Q1=meanx+pmax(muind,:)*V(:,n-1);
        deltaV(muind,n)=Q1-Q0;
        V(muind,n)=max(Q0,Q1);
    end
end

result=zeros(length(mus),1);
for ind=1:length(mus)
    result(ind)=deltaV(41*(ns(ind)-1)+round((mus(ind)-1)/0.1+1));
end

end