function [rawdata,data] = simulate_data(modelnum,parameter,datasize)
% simulate_data simulates the model with the fitted parameters.
%
% USAGE: [rawdata,data] = simulate_data(modelnum,parameter,datasize)
%
% INPUTS:   datasize - number of six-trial combos (trial length 5 to 10); 30
%   is the same size as laboratory participants; 10 is the size for online
%   participants
%
% OUTPUTS:  rawdata - the same data format as in raw data (under folder data/)
%           data - the same data format as in data_extracted/extracted_subX.mat

if modelnum == 1
    load deltaV_optimal;
end
if ismember(modelnum,[4,5])
    [k,b,sigma,beta] = deal(parameter(1),parameter(2),parameter(3),parameter(4));
end

times = datasize;
rng('shuffle');

rawdata = zeros(times*45,8);
i = 1; trial = 0;
for repeat = 1:times
    for totaldays = 5:10
        trial = trial+1;
        
        if ismember(modelnum,[4,5])
            eta = normrnd(0,sigma); % threshold noise for this trial
        end
        
        % first day
        reward = newrandn(); mu = reward; avereward = reward;
        rawdata(i,:) = [trial,totaldays,1,nan,1,reward,mu,reward];
        i=i+1;
        
        for days = 2:totaldays
            daysleft = totaldays-days+1;
            
            % model prediction of action
            if modelnum == 1 % Opt
                deltaV = deltaVmat(41*(daysleft-1)+round((mu-1)/0.1+1));
                Pr1=1./(1+exp(-([ones(size(deltaV)),deltaV]*parameter)));
                
            else % threshold models
                if modelnum <= 3 % fixed thresholds
                    [k,b,beta] = deal(parameter(1),parameter(2),parameter(3));
                    switch modelnum
                        case 2 % Num
                            threshold = boundthres(k*daysleft+b);
                        case 3 % Prop
                            threshold = boundthres(k*daysleft./totaldays+b);
                    end
                    Pr1 = 1./(1+exp(-(beta*(threshold - mu))));
                    
                else % variable thresholds
                    switch modelnum
                        case 4 % Num-V
                            thresholdfix = (k*(totaldays-days+1) + b)';
                        case 5 % Prop-V
                            thresholdfix = (k*(totaldays-days+1)/totaldays + b)'; % column vector
                    end
                    threshold = boundthres(thresholdfix + eta);
                    Pr1 = 1./(1+exp(-beta*(threshold - mu)));
                end
            end
            if rand()<Pr1
                action=1;
            else
                action=0;
            end
            
            reward = (action==1)*newrandn() + (action==0)*mu;
            avereward = (avereward*(days-1) + reward)/days;
            mu = max(mu,reward);
            rawdata(i,:) = [trial,totaldays,days,nan,action,reward,mu,avereward];
            i = i+1;
        end
    end
end

mu_origin = [nan;rawdata(1:end-1,7)];

ind = rawdata(:,3)>1;
datause = rawdata(ind,:);
data.actions = datause(:,5);
data.totaldays = datause(:,2); data.daysleft=datause(:,2)-datause(:,3)+1;
data.mu = mu_origin(ind);
end

function r = newrandn()
r = roundn(randn(1)*0.6+3,-1);
if r<1; r=1; end
if r>5; r=5; end
end

function threshold = boundthres(threshold)
threshold(threshold>5) = 5;
threshold(threshold<1) = 1;
end
