function modelfitting_threshold39(subnum)
% modelfitting_threshold39 runs the fitting of the Flexible-Threshold model
% using fmincon.
%
% USAGE:  modelfitting_threshold39(subnum)

Npar = 40;

% initialize parameters
sptotalnum = 1000;
sppars0 = [rand(39,sptotalnum)*4+1; rand(1,sptotalnum)-0.5];

pars = nan(Npar,sptotalnum); minusllh = nan(1,sptotalnum); exitflag = nan(1,sptotalnum); numnotmature = 0; 

for spnum = 1:sptotalnum
    spnum
    
    load(['data_extracted/extracted_sub' num2str(subnum) '.mat']);
    
    pars0 = sppars0(:,spnum);
    
    % parameter boundaries
    lb = [ones(39,1);-Inf*ones(1,1)];
    ub = [5*ones(39,1);Inf*ones(1,1)];
    
    % options for fmincon
    options.Algorithm = 'interior-point';
    options.MaxFunEvals = 100000;
    
    fun = @(pars)optimizefun_threshold39(pars,muvalue,daysleft,totaldays,actions);
    [pars(:,spnum),minusllh(spnum),exitflag(spnum),~] = fmincon(fun,pars0,[],[],[],[],lb,ub,[],options);
    
    % change beta back to original scale
    pars(end,spnum) = exp(pars(end,spnum));
    
    if exitflag(spnum) == 0
        numnotmature = numnotmature+1;
    end
end

[minusloglik_min,minind] = min(minusllh);
p_min = pars(:,minind)';
fittingmethod = ['fminunc_logscale_spnum' num2str(sptotalnum)];

save(['fittingresult/Flexible-Threshold model/thres39_sub' num2str(subnum) '_all.mat'],'pars','minusllh','numnotmature','exitflag','fittingmethod');
save(['fittingresult/Flexible-Threshold model/thres39_sub' num2str(subnum) '.mat'],'p_min','minusloglik_min','fittingmethod');

end

function [minusloglik] = optimizefun_threshold39(pars,muvalue,daysleft,totaldays,actions)
thres = nan(10,9);
i = 1;
for N = 5:10
    thres(N,1:N-1) = pars(i:i+N-2);
    i = i+N-1;
end

predictor = thres(sub2ind(size(thres),totaldays,daysleft))-muvalue;

beta = exp(pars(i)); % beta for thresholds

Pr1 = 1./(1+exp(-(predictor*beta)));
A = log(Pr1.*actions+(1-Pr1).*(1-actions));
minusloglik = -sum(A);

end