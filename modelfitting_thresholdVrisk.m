function modelfitting_thresholdVrisk(subnum,model)
% modelfitting_thresholdVrisk runs the fitting of the Prop-V-risk models
% using fminunc.
%
% USAGE: modelfitting_thresholdVrisk(subnum,model)

Npar = 5;

% initialize parameters
sptotalnum = 100;
sppars0 = rand(Npar,sptotalnum);
switch model
    case 6
        sppars0(1,:) = sppars0(1,:); % k
        sppars0(2,:) = sppars0(2,:) + 2.5; % b
end
sppars0(3,:) = - sppars0(3,:) - 1; % log(sigma)
sppars0(4,:) = sppars0(4,:) + 1; % log(beta)
sppars0(5,:) = sppars0(5,:); % alpha (risk attitude)

pars = nan(Npar,sptotalnum); minusllh = nan(1,sptotalnum); exitflag = nan(1,sptotalnum);

numnotmature = 0;

% load data to be fit
load(['data_extracted/extracted_sub' num2str(subnum) '.mat']);

for spnum = 1:sptotalnum
    spnum
    pars0 = sppars0(:,spnum);    
        
    % options for fmincon
    options.display = 'iter';
    options.MaxFunEvals = 10000;
    options.MaxIterations = 1000;
    options.Algorithm = 'quasi-newton';
    
    fun = @(pars)optimizefun_thresholdVrisk(model,pars,actions,muvalue,daysleft,totaldays);
    [pars(:,spnum),minusllh(spnum),exitflag(spnum)] = fminunc(fun,pars0,options);
    
    % change it back to original scale
    pars(3:4,spnum) = exp(pars(3:4,spnum));
    
    if exitflag(spnum) == 0
        numnotmature = numnotmature+1;
    end
end

[minvalue,minind] = min(minusllh);
p_min = pars(:,minind)';
minusloglik_min = minvalue;

fittingmethod = ['fminunc_logscale_spnum' num2str(sptotalnum)];
save(['fittingresult/' fun_modelnum2name(model) '_sub' num2str(subnum) '.mat'],'p_min','minusloglik_min','fittingmethod');
save(['fittingresult/' fun_modelnum2name(model) '_sub' num2str(subnum) '_all.mat'],'pars','minusllh','exitflag','numnotmature','fittingmethod');

end